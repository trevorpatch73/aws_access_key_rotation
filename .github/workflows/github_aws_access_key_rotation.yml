name: GitHub AWS Access Key Rotation Terraform Action

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TERRAFORM_WORKSPACE: github-aws-key-rotation
      TERRAFORM_STATE: apply

    steps:
      - name: Checkout
        uses: actions/checkout@v3       

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Workspace
        working-directory: key_rotation
        id: workspace
        run: |       
          terraform init
          terraform workspace new ${{ env.TERRAFORM_WORKSPACE }}
        continue-on-error: true     

      - name: Terraform Init
        working-directory: key_rotation√ü
        id: init
        run: terraform workspace select ${{ env.TERRAFORM_WORKSPACE }} && terraform init -reconfigure

      - name: Terraform Plan
        working-directory: key_rotation
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform workspace select ${{ env.TERRAFORM_WORKSPACE }} && terraform plan -no-color -input=false
        continue-on-error: true

      - name: Terraform Plan Status
        working-directory: key_rotation
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        working-directory: key_rotation
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && env.TERRAFORM_STATE == 'apply'
        run: terraform workspace select ${{ env.TERRAFORM_WORKSPACE }} && terraform apply -auto-approve
        continue-on-error: true

      - name: Terraform Apply Status
        working-directory: key_rotation
        if: steps.apply.outcome == 'failure' && env.TERRAFORM_STATE == 'apply'
        run: |
          terraform workspace select ${{ env.TERRAFORM_WORKSPACE }} && terraform destroy -auto-approve
          exit 1
      - name: Terraform Destroy
        working-directory: key_rotation
        id: destroy
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && env.TERRAFORM_STATE == 'destroy'
        run: | 
          terraform workspace select ${{ env.TERRAFORM_WORKSPACE }} && terraform destroy -auto-approve